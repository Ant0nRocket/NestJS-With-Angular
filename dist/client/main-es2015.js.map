{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/client/app/app.component.ts","./src/client/app/app.component.html","./src/client/app/app.module.ts","./src/client/app/app.routes.ts","./src/client/app/components/components.module.ts","./src/client/app/components/footer/footer.component.ts","./src/client/app/components/footer/footer.component.html","./src/client/app/components/header/header.component.ts","./src/client/app/components/header/header.component.html","./src/client/app/components/main/auth/auth.component.ts","./src/client/app/components/main/auth/auth.component.html","./src/client/app/components/main/main.component.ts","./src/client/app/components/main/main.component.html","./src/client/app/components/main/welcome/welcome.component.ts","./src/client/app/components/main/welcome/welcome.component.html","./src/client/app/services/auth/auth.service.ts","./src/client/app/services/auth/signup-login-credentials.ts","./src/client/app/services/components/sidebar-toggle.service.ts","./src/client/app/services/services.module.ts","./src/client/app/services/websockets/websocket.options.ts","./src/client/app/services/websockets/websockets.service.ts","./src/client/environments/environment.ts","./src/client/main.ts","./src/shared/api.config.ts","./src/shared/auth/auth-credentials.dto.ts","./src/shared/websockets/websockets-theme.enum.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n\tselector: 'app-root',\n\ttemplateUrl: './app.component.html',\n\tstyleUrls: [ './app.component.scss' ]\n})\nexport class AppComponent {\n\tpublic showSidebar = false;\n}\n","<app-header></app-header>\n<app-main></app-main>\n<app-footer></app-footer>\n","import { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouterModule } from '@angular/router';\n\nimport { ComponentsModule } from './components/components.module';\nimport { ServicesModule } from './services/services.module';\nimport { ROUTES } from './app.routes';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n\tdeclarations: [ AppComponent ],\n\timports: [\n\t\t// Angular modules\n\t\tBrowserModule,\n\t\tRouterModule.forRoot(ROUTES),\n\t\tHttpClientModule,\n\t\tBrowserAnimationsModule,\n\n\t\tFlexLayoutModule,\n\n\t\t// User modules\n\t\tComponentsModule,\n\t\tServicesModule\n\t],\n\tbootstrap: [ AppComponent ]\n})\nexport class AppModule {}\n","import { Routes } from '@angular/router';\nimport { AuthGuard } from './guards/auth.guard';\nimport { AuthComponent } from './components/main/auth/auth.component';\nimport { WelcomeComponent } from './components/main/welcome/welcome.component';\n\nexport const ROUTES: Routes = [\n\t// default page - welcome\n\t{ path: '', component: WelcomeComponent },\n\n\t// sign-up and login\n\t{ path: 'auth', component: AuthComponent }\n];\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatExpansionModule } from '@angular/material/expansion';\n\nimport { HeaderComponent } from './header/header.component';\nimport { MainComponent } from './main/main.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { WelcomeComponent } from './main/welcome/welcome.component';\nimport { AuthComponent } from './main/auth/auth.component';\n\n@NgModule({\n\tdeclarations: [\n\t\t// Shared\n\t\tHeaderComponent,\n\t\tFooterComponent,\n\t\tMainComponent,\n\n\t\t// Specific components\n\t\tAuthComponent,\n\t\tWelcomeComponent\n\t],\n\texports: [ HeaderComponent, FooterComponent, MainComponent ],\n\timports: [\n\t\tCommonModule,\n\t\tFormsModule,\n\t\tRouterModule,\n\n\t\tFlexLayoutModule,\n\n\t\t// Material\n\t\tMatDividerModule,\n\t\tMatToolbarModule,\n\t\tMatSidenavModule,\n\t\tMatMenuModule,\n\t\tMatIconModule,\n\t\tMatButtonModule,\n\t\tMatInputModule,\n\t\tMatExpansionModule\n\t]\n})\nexport class ComponentsModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n\tselector: 'app-footer',\n\ttemplateUrl: './footer.component.html',\n\tstyleUrls: [ './footer.component.scss' ]\n})\nexport class FooterComponent implements OnInit {\n\tconstructor() {}\n\n\tngOnInit(): void {}\n}\n","<footer>\n    Copyright 2020 &copy; <a href=\"mailto:anton.stephanyak@gmail.com\">Anton Stephanyak</a> (Ant0nRocket)\n</footer>","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { AuthService } from '../../services/auth/auth.service';\nimport { SidebarService } from '../../services/components/sidebar-toggle.service';\n\n@Component({\n\tselector: 'app-header',\n\ttemplateUrl: './header.component.html',\n\tstyleUrls: [ './header.component.scss' ]\n})\nexport class HeaderComponent implements OnInit {\n\tconstructor(public authService: AuthService, public sidebarService: SidebarService) {}\n\n\tngOnInit(): void {}\n}\n","<mat-toolbar color=\"primary\">\n    <mat-toolbar-row>\n        <button mat-icon-button (click)=\"sidebarService.toggleSidebar.emit()\">\n            <mat-icon>menu</mat-icon>\n        </button>\n\n        <h1>\n            <a routerLink=\"/\" class=\"app-name\">Lists</a>\n        </h1>\n        \n        <span fxFlex></span>\n\n        <button mat-raised-button color=\"warn\" [routerLink]=\"['/auth']\" routerLinkActive=\"invisible\" *ngIf=\"!authService.authToken\">\n            <mat-icon>person</mat-icon> LOG IN\n        </button>\n\n        <div *ngIf=\"authService.authToken\">\n            <mat-menu #appMenu=\"matMenu\">\n                <button mat-menu-item (click)=\"authService.logout()\">\n                    <mat-icon>exit_to_app</mat-icon>\n                    Exit\n                </button>\n            </mat-menu>\n            \n            <button mat-raised-button [matMenuTriggerFor]=\"appMenu\">\n                <mat-icon>person</mat-icon>\n                {{ authService.user.username || authService.user.email || authService.user.phone }}\n            </button>\n        </div>\n    </mat-toolbar-row>\n</mat-toolbar>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AuthService } from '../../../services/auth/auth.service';\nimport { SignupLoginCredentials } from '../../../services/auth/signup-login-credentials';\nimport { Subscription } from 'rxjs';\nimport { Router } from '@angular/router';\n\n@Component({\n\tselector: 'app-auth',\n\ttemplateUrl: './auth.component.html',\n\tstyleUrls: [ './auth.component.css' ]\n})\nexport class AuthComponent implements OnInit, OnDestroy {\n\t// Work mode (log-in or sign-up)\n\tpublic mode = 'log-in';\n\tpublic isLoginMode = () => this.mode === 'log-in';\n\tpublic isSignupMode = () => !this.isLoginMode();\n\tpublic toggleMode = () => {\n\t\tthis.mode = this.isLoginMode() ? 'sign-up' : 'log-in';\n\t\tthis.authErrors = [];\n\t};\n\n\t// Model\n\tpublic credentials: SignupLoginCredentials = new SignupLoginCredentials();\n\n\t// Auth subscribtions\n\tprivate authStateChanged$: Subscription;\n\tprivate authErrors$: Subscription;\n\n\t// Auth errors\n\tpublic authErrors: string[] = [];\n\tpublic isAuthErrors = () => this.authErrors.length > 0;\n\n\tconstructor(private authService: AuthService, private router: Router) {}\n\n\tngOnInit(): void {\n\t\tthis.authStateChanged$ = this.authService.onAuthStateChanged$.subscribe((state) => {\n\t\t\tif (state) this.router.navigate([ '' ]);\n\t\t});\n\t\tthis.authErrors$ = this.authService.onAuthError$.subscribe((err) => {\n\t\t\tthis.authErrors.push(err);\n\t\t});\n\t}\n\n\tngOnDestroy(): void {\n\t\tthis.authErrors$.unsubscribe();\n\t\tthis.authStateChanged$.unsubscribe();\n\t}\n\n\tpublic submit(event: Event) {\n\t\t// we could be here only if SUBMIT which is enabled only\n\t\t// if form is valid. But we should manually check pass1 and pass2.\n\t\tthis.authErrors = [];\n\n\t\tif (this.isLoginMode()) {\n\t\t\t// nothing to check here, go ahead!\n\t\t\tthis.authService.login(this.credentials);\n\t\t} else {\n\t\t\tif (!this.credentials.isPasswordsEqual()) {\n\t\t\t\tevent.preventDefault(); // stop submitting\n\t\t\t\tthis.authErrors.push('Passwords must be equal.');\n\t\t\t} else {\n\t\t\t\tthis.authService.signUp(this.credentials);\n\t\t\t}\n\t\t}\n\t}\n}\n","<form #form=\"ngForm\" (ngSubmit)=\"submit($event)\">\n\n    <div class=\"auth-errors\" *ngIf=\"isAuthErrors()\">\n        <p *ngFor=\"let error of authErrors\">{{ error }}</p>\n        <!-- <button mat-raised-button (click)=\"authErrors = []\" color=\"warn\">OK</button> -->\n    </div>\n\n    <div *ngIf=\"isLoginMode()\">\n        Don't have an account? <span class=\"like-link\" (click)=\"toggleMode()\">Register</span> now!\n    </div>\n\n    <div *ngIf=\"isSignupMode()\">\n        Already have an account? <span class=\"like-link\" (click)=\"toggleMode()\">Log-in</span> now!\n    </div>\n\n    <mat-divider></mat-divider>\n\n    <mat-form-field>\n        <mat-label>User ID</mat-label>\n        <input matInput placeholder=\"login, email or mobile\" name=\"username\" [(ngModel)]=\"credentials.id\" required>\n    </mat-form-field>\n\n    <mat-form-field>\n        <mat-label>Password</mat-label>\n        <input matInput type=\"password\" placeholder=\"Any non-empty string\" name=\"password\" [(ngModel)]=\"credentials.password\" required>\n    </mat-form-field>\n\n    <mat-form-field *ngIf=\"isSignupMode()\">\n        <mat-label>Password confirmation</mat-label>\n        <input matInput type=\"password\" placeholder=\"Same password once again\" name=\"password2\" [(ngModel)]=\"credentials.password2\" required>\n    </mat-form-field>\n\n    <button type=\"submit\" mat-raised-button color=\"warn\" [disabled]=\"form.invalid\">{{ mode | uppercase }}</button>\n</form>","import { Component, OnInit, Input, ViewChild, EventEmitter } from '@angular/core';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport { SidebarService } from '../../services/components/sidebar-toggle.service';\n\n@Component({\n\tselector: 'app-main',\n\ttemplateUrl: './main.component.html',\n\tstyleUrls: [ './main.component.scss' ]\n})\nexport class MainComponent implements OnInit {\n\t@ViewChild('sidebar') sidebar: MatSidenav;\n\n\tconstructor(private sidebarService: SidebarService) {}\n\n\tngOnInit(): void {\n\t\tthis.sidebarService.toggleSidebar.subscribe(() => this.sidebar.toggle());\n\t}\n}\n","<mat-sidenav-container>\n    <mat-sidenav #sidebar>\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Eveniet, temporibus?\n    </mat-sidenav>\n\n    <mat-sidenav-content>\n        <router-outlet></router-outlet>\n    </mat-sidenav-content>\n</mat-sidenav-container>","import { Component, OnInit, EventEmitter } from '@angular/core';\nimport { AuthService } from '../../../services/auth/auth.service';\nimport * as shortid from 'shortid';\nimport { WebSocketsService } from '../../../services/websockets/websockets.service';\nimport { WebSocketsDto } from '../../../../../shared/websockets/websockets.dto';\nimport { Subscription } from 'rxjs';\nimport { WebSocketsTheme } from '../../../../../shared/websockets/websockets-theme.enum';\n\n@Component({\n\tselector: 'app-welcome',\n\ttemplateUrl: './welcome.component.html',\n\tstyleUrls: [ './welcome.component.css' ]\n})\nexport class WelcomeComponent implements OnInit {\n\tpublic webSocketConnectInProgress = true;\n\n\tpublic onMessage: EventEmitter<Array<string>> = new EventEmitter();\n\n\tpublic hasMessages = () => this.receivedMessages.length > 0;\n\n\tprivate componentId = shortid.generate();\n\tprivate message$: Subscription;\n\tprivate receivedMessages: string[] = [];\n\n\tconstructor(public authService: AuthService, public webSockets: WebSocketsService) {\n\t\tthis.message$ = webSockets.onMessageReceived$.subscribe((dto: WebSocketsDto) => {\n\t\t\tif (dto.cid !== this.componentId) return; // filter messages not from this component\n\t\t\tif (this.receivedMessages.length > 4) this.receivedMessages = [];\n\t\t\tthis.receivedMessages.push(dto.content);\n\t\t\tthis.onMessage.emit(this.receivedMessages);\n\t\t});\n\t}\n\n\tngOnInit(): void {\n\t\tif (this.authService.authToken) {\n\t\t\tthis.webSockets.connect();\n\t\t\tsetTimeout(() => (this.webSocketConnectInProgress = false), 3000);\n\t\t}\n\t}\n\n\ttestWebSockets() {\n\t\tconst dto: WebSocketsDto = {\n\t\t\tcid: this.componentId,\n\t\t\tcontent: shortid.generate(),\n\t\t\ttheme: WebSocketsTheme.SendBackData\n\t\t};\n\t\tthis.webSockets.send(dto); // if sockets not ready - send to nowhere :)\n\t}\n}\n","<div *ngIf=\"!authService.authToken\">\n    <p>\n        Hello and welcome to <b>NestJS with Angular</b> website. <br>\n        My name is <a href=\"mailto:anton.stephanyak@gmail.com\">Anton Stephanyak</a>\n        (aka Ant0nRocket <sup><a href=\"https://github.com/Ant0nRocket\" target=\"_blank\">GIT</a></sup>) and I'm glad to see you!\n    </p>\n    <p>\n        Main purpose of this resource is to demonstrate my ability of creating\n        websites such as this one. \n    </p>\n    <p>\n        In the top-right corner there is a LOG IN button. Please, click it and perform quick\n        registration (provide fake ID, no confirmation required, you will immediately loged-in).<br>\n        There are two reasons why you should do that:\n    </p>\n    <ol>\n        <li>\n            I'll proove my ability of creating auth stuff.\n        </li>\n        <li>\n            WebSockets features available only for signed-in users.\n        </li>\n    </ol>\n</div>\n\n<div *ngIf=\"authService.authToken\">\n    <p *ngIf=\"!hasMessages()\">\n        Outstanding, <b>{{ authService.user.username || authService.user.email || authService.user.phone }}</b>!\n    </p>\n    <p *ngIf=\"!hasMessages()\">\n        Now you can perform WebSockets test.\n    </p>\n    <p *ngIf=\"webSocketConnectInProgress\">Let's wait few seconds for connection to be established...</p>\n\n    <div *ngIf=\"!webSocketConnectInProgress && !webSockets.ready\">\n        <p>Ooops! I'm very sorry, but something goes wrong with back-end. Please, try later :(</p>\n    </div>\n\n    <div *ngIf=\"!webSocketConnectInProgress && webSockets.ready\">\n        <p *ngIf=\"!hasMessages()\">\n            Ok! Everything is ready! Our back-end had just accepted our connection. Let's play a ping-pong game with him!\n        </p>\n        <p *ngIf=\"!hasMessages()\">\n            See that button with \"TEST\" label? When you will click it, a random string will be generated\n            and sent to the server via WebSocket. Then the server will return us this string and you will see its \n            content in the list below. Go ahead! Click!\n        </p>\n        <p>\n            <button mat-stroked-button color=\"link\" (click)=\"testWebSockets()\">TEST</button>            \n        </p>\n        <ol>\n            <li *ngFor=\"let message of (onMessage | async)\">{{ message }}</li>\n        </ol>\n\n        <div *ngIf=\"hasMessages()\">\n            <mat-divider></mat-divider>\n    \n            <p>And all that messages are not just client generated and added in list. They truly were sent to server and get back. You can easily check this in Network tab of the development tools of your browser. Just select \"/\" websocket connection and look inside the tab \"Messages\".</p>\n        </div>\n    </div>\n</div>\n\n<mat-divider></mat-divider>\n\n<mat-expansion-panel>\n    <mat-expansion-panel-header>\n        List of technologies used here\n    </mat-expansion-panel-header>\n    <ul>\n        <li>Angular (for front-end)</li>\n        <ul>\n            <li>Angular Material components were used for styling</li>\n        </ul>\n        <li>NestJS (for back-end)</li>\n        <li>TypeScript (both for front and back)</li>\n        <li>WebSockets API</li>\n        <li>MongoDB</li>\n        <li>Git</li>\n        <li>Heroku (deploying using one of project's git branches)</li>\n        <ul>\n            <li>mLab addon for production MongoDB base</li>\n        </ul>\n    </ul>\n</mat-expansion-panel>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { Subject } from 'rxjs';\n\nimport { ServicesModule } from '../services.module';\n\nimport { AuthCredentialsDto } from '../../../../shared/auth/auth-credentials.dto';\nimport { apiConfig } from '../../../../shared/api.config';\nimport { AuthTokenDto } from '../../../../shared/auth/auth-token.dto';\nimport { IUserBase } from '../../../../shared/interfaces/user-base.interface';\nimport { Router } from '@angular/router';\nimport { SignupLoginCredentials } from './signup-login-credentials';\n\n@Injectable({\n\tprovidedIn: ServicesModule\n})\nexport class AuthService {\n\tpublic onAuthStateChanged$: Subject<boolean> = new Subject();\n\tpublic onAuthError$: Subject<string> = new Subject();\n\n\tpublic user: IUserBase = undefined;\n\n\tprivate _authToken: string = null;\n\n\tget authToken(): string {\n\t\treturn this._authToken;\n\t}\n\n\tset authToken(authToken: string) {\n\t\tthis._authToken = authToken;\n\t\tif (this._authToken) {\n\t\t\t// success login\n\t\t\tthis.writeUserFromToken(authToken);\n\t\t\tlocalStorage.setItem('authToken', authToken);\n\t\t\tthis.onAuthStateChanged$.next(true);\n\t\t} else {\n\t\t\t// failed log-in\n\t\t\tlocalStorage.removeItem('authToken');\n\t\t\tthis.onAuthStateChanged$.next(false);\n\t\t}\n\t}\n\n\tconstructor(private http: HttpClient, private router: Router) {\n\t\tthis.authToken = localStorage.getItem('authToken');\n\t}\n\n\t//------------------------------------------------------------------------\n\t/** Decodes token (which is IUserBase from API) and writes in this.user */\n\tprivate writeUserFromToken(authToken: string) {\n\t\tconst userFromToken: IUserBase = new JwtHelperService().decodeToken(authToken);\n\t\tconst { _id, email, phone, username } = userFromToken;\n\t\tthis.user = { _id, email, phone, username };\n\t}\n\n\t//----------------------------------------------------------------\n\t/** Sends auth credentials to server and subscribes to response */\n\tpublic signUp(authCredentials: SignupLoginCredentials) {\n\t\tthis.http.post<AuthTokenDto>(apiConfig.urlSignup, authCredentials).subscribe(\n\t\t\t// remember that authToken setter will call appropriate subject\n\t\t\t(dto) => {\n\t\t\t\tthis.authToken = dto.token;\n\t\t\t},\n\t\t\t(err) => {\n\t\t\t\tthis.authToken = null;\n\n\t\t\t\tif (\n\t\t\t\t\terr.error.statusCode === 409 // User exists\n\t\t\t\t)\n\t\t\t\t\tthis.onAuthError$.next('User already exists.');\n\t\t\t\tif (\n\t\t\t\t\terr.error.statucCode === 400 // Bad request\n\t\t\t\t)\n\t\t\t\t\tthis.onAuthError$.next('Some error occured. Check input.');\n\t\t\t\tif (\n\t\t\t\t\terr.error.statucCode === 500 // server error\n\t\t\t\t)\n\t\t\t\t\tthis.onAuthError$.next('Some server side error. Try later.');\n\t\t\t}\n\t\t);\n\t}\n\n\t//-----------------------------\n\t/** Same as signup, actually */\n\tpublic login(authCredentials: AuthCredentialsDto) {\n\t\tthis.http.post<AuthTokenDto>(apiConfig.urlLogin, authCredentials).subscribe(\n\t\t\t(dto) => {\n\t\t\t\tthis.authToken = dto.token;\n\t\t\t},\n\t\t\t(err) => {\n\t\t\t\tif (err.error.statucCode !== 504) {\n\t\t\t\t\tthis.authToken = null;\n\t\t\t\t\tthis.onAuthError$.next('Invalid login or password.');\n\t\t\t\t} else {\n\t\t\t\t\tthis.onAuthError$.next(\"Server isn't responding. Try later.\");\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\t//----------------------------\n\t/** Checks auth token valid */\n\tpublic checkToken(authTokenDto?: AuthTokenDto) {\n\t\tif (!authTokenDto) authTokenDto = { token: this.authToken };\n\n\t\tthis.http.post(apiConfig.urlTokenCheck, authTokenDto).subscribe(\n\t\t\t(dto: AuthTokenDto) => {\n\t\t\t\tthis.authToken = dto.token;\n\t\t\t},\n\t\t\t(err) => {\n\t\t\t\tif (err.error.statucCode < 500) {\n\t\t\t\t\tthis.authToken = null;\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\t//----------------------------\n\t/** Sets auth token to null */\n\tpublic logout() {\n\t\tthis.authToken = null;\n\t\tthis.router.navigate([ '' ]);\n\t}\n}\n","import { AuthCredentialsDto } from '../../../../shared/auth/auth-credentials.dto';\n\nexport class SignupLoginCredentials extends AuthCredentialsDto {\n\tpassword2: string = '';\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.password = '';\n\t\tthis.password2 = '';\n\t}\n\n\tisPasswordsEqual(): boolean {\n\t\tif (!this.password || !this.password2) return false;\n\t\treturn this.password === this.password2;\n\t}\n\n\tisEmpty(): boolean {\n\t\tif (!this.id || !this.password) return true;\n\t\treturn this.id.trim().length === 0 || this.password.length === 0;\n\t}\n}\n","import { Injectable, EventEmitter } from '@angular/core';\nimport { ServicesModule } from '../services.module';\n\n@Injectable({\n\tprovidedIn: ServicesModule\n})\nexport class SidebarService {\n\tpublic toggleSidebar: EventEmitter<void> = new EventEmitter();\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n    ],\r\n})\r\nexport class ServicesModule { }\r\n","import { environment } from \"../../../environments/environment\";\r\n\r\nexport class WebSocketOptions {\r\n\r\n    /** Connection URL. */\r\n    private _url = '';\r\n\r\n    /** Connection URL. By default - host root. */\r\n    public get url(): string {\r\n        if (this._url === '') {\r\n            // if your you have HTTPS connection then (at least Firefox) will\r\n            // block attempts to connect to ws:// resources because they are\r\n            // \"insecure connection\"'s. In that case you should provide wss:// url\r\n            const wsProtocolPrefix =\r\n                location.protocol.startsWith('https') ? 'wss://' : 'ws://';\r\n\r\n            this._url = wsProtocolPrefix + location.host;\r\n\r\n            if (!environment.production) {\r\n                // in dev mode backend usualy on 3000 port, so let's change it\r\n                this._url = this._url.replace('4200', '3000');\r\n            }\r\n        }\r\n\r\n        return this._url;\r\n    }\r\n\r\n    public set url(url: string) {\r\n        this._url = url;\r\n    }\r\n\r\n    /**\r\n    * For exanple, Heroku closes any connection in 30 sec.\r\n    * if there were no packages transmited.\r\n    * Below there is Ping-Pong code which fire every 25000 ms.\r\n    */\r\n    public IntervalOfPingPongMs = 20000;\r\n\r\n    /** \r\n     * If WebSocket closed because of some error it will\r\n     * try to reconnect every 5 seconds\r\n     */\r\n    public intervalOfRoconnectionOnErrorMs = 5000;\r\n\r\n    /** Max amount of reconnection attempts */\r\n    public reconnectionAttemptsLimit = 10;\r\n}","import { Injectable, EventEmitter } from '@angular/core';\r\n\r\nimport { ServicesModule } from '../services.module';\r\nimport { WebSocketOptions } from './websocket.options';\r\nimport { AuthService } from '../auth/auth.service';\r\n\r\nimport { WebSocketsDto } from '../../../../shared/websockets/websockets.dto';\r\nimport { WebSocketsTheme } from '../../../../shared/websockets/websockets-theme.enum';\r\n\r\n@Injectable({\r\n  providedIn: ServicesModule\r\n})\r\nexport class WebSocketsService {\r\n\r\n  /** Instance of WebSocket */\r\n  private ws: WebSocket;\r\n\r\n  /** Connection options */\r\n  private options: WebSocketOptions = new WebSocketOptions();\r\n\r\n  /** ID of ping-pong interval */\r\n  private idOfPingPongInterval: number;\r\n\r\n  /** Currect reconnection attempts count */\r\n  private reconnectionAttemptsPassed = 0;\r\n\r\n  /** \r\n   * Reconnections limit reached. It's important to stop reconnection\r\n   * attempts after some amout fails 'cause of memory leaks\r\n   */\r\n  private get reconnectionAttemptsLimitReached(): boolean {\r\n    return this.reconnectionAttemptsPassed >= this.options.reconnectionAttemptsLimit;\r\n  }\r\n\r\n  /** Whether websocket open or not */\r\n  public get ready(): boolean {\r\n    return this.ws?.readyState === WebSocket.OPEN;\r\n  }\r\n\r\n  /** \r\n   * Occurred when WebSocket connection open. \r\n   * The fact that it's open doesn't mean that it's ready.\r\n   * Check [ready] getter for this. \r\n   */\r\n  public onConnectionOpen$: EventEmitter<void> = new EventEmitter();\r\n\r\n  /** Occurred when WebSocket closed for any reason */\r\n  public onConnectionClose$: EventEmitter<void> = new EventEmitter();\r\n\r\n  /** Emits when there is new message from server */\r\n  public onMessageReceived$: EventEmitter<WebSocketsDto> = new EventEmitter();\r\n\r\n  /** Occurred when some error in WebSocket connection */\r\n  public onConnectionError$: EventEmitter<string> = new EventEmitter();\r\n\r\n  constructor(private authService: AuthService) {\r\n    authService.onAuthStateChanged$.subscribe(\r\n      (authorized: boolean) => {\r\n        if (!authorized) this.close();\r\n      });\r\n  }\r\n\r\n  /** \r\n   * Connects to WebSocket server. \r\n   * If there is an open connection then nothing will happen.\r\n   */\r\n  public connect(options?: WebSocketOptions) {\r\n    if (this.ready) return; // already connected and authorized - return\r\n    if (options) this.options = options; // remember options\r\n    this.ws = new WebSocket(this.options.url); // initialize new websocket connection\r\n\r\n    this.ws.onopen = () => {\r\n      this.idOfPingPongInterval =\r\n        window.setInterval(() => { this.send() }, this.options.IntervalOfPingPongMs);\r\n    };\r\n\r\n    this.ws.onmessage = (ev) => { // received message\r\n      try {\r\n        const data: WebSocketsDto = JSON.parse(ev.data);\r\n        if (data.theme === WebSocketsTheme.ClientConnected) {\r\n          this.sendAuthToken();\r\n        } else if (data.theme === WebSocketsTheme.Unauthorized) {\r\n          this.close();\r\n        } else {\r\n          this.onMessageReceived$.emit(data);\r\n        }\r\n      } catch {\r\n        this.onMessageReceived$.emit({\r\n          cid: '',\r\n          theme: WebSocketsTheme.BadDto,\r\n          content: ev.data\r\n        });\r\n      }\r\n    };\r\n\r\n    this.ws.onerror = (ev: Event) => {\r\n      this.onConnectionError$.emit(`Error: ${ev}`);\r\n      setTimeout(() => {\r\n        if (!this.reconnectionAttemptsLimitReached && !this.ready) {\r\n          this.reconnectionAttemptsPassed++;\r\n          this.connect();\r\n        }\r\n      }, this.options.intervalOfRoconnectionOnErrorMs);\r\n    };\r\n\r\n    this.ws.onclose = () => {\r\n      window.clearInterval(this.idOfPingPongInterval);\r\n    };\r\n  }\r\n\r\n  /** \r\n   * Sends existing authToken (whether it valid or not).\r\n    */\r\n  private sendAuthToken() {\r\n    const dto: WebSocketsDto = {\r\n      cid: '',\r\n      theme: WebSocketsTheme.AuthenticateWithToken,\r\n      content: this.authService.authToken\r\n    };\r\n    this.send(dto);\r\n  }\r\n\r\n  /** \r\n   * Closes connection to server (if it's in OPEN state).\r\n   */\r\n  public close() {\r\n    this.ws?.close();\r\n  }\r\n\r\n  /** \r\n   * Sends a WebSocketsDto to server.   \r\n   * If Connection is not OPEN then nothing will happen.   \r\n   * If no WebSocketsDto provided then empty string will be sent.   \r\n   * It can be useful in Ping-Pong algorythm.\r\n   */\r\n  public send(m?: WebSocketsDto | string) {\r\n    if (!this.ready) return;\r\n    if (!m) m = '';\r\n    const message2send = typeof m === 'string' ? m : JSON.stringify(m);\r\n    this.ws.send(message2send);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","const urlApiBase = '/api';\r\n\r\nexport const apiConfig = {\r\n    urlWebSocket: '/socket',\r\n    urlSignup: urlApiBase + '/signup',\r\n    urlLogin: urlApiBase + '/login',\r\n    urlTokenCheck: urlApiBase + '/check-token',\r\n    minUsernameLen: 1,\r\n    maxUsernameLen: 30,\r\n    minPasswordLen: 1,\r\n    maxPasswordLen: 30,\r\n    usernameRegex: /^[A-Za-zА-Яа-я0-9\\s.\\-_]+$/,\r\n    passwordRegex: /^[A-Za-zА-Яа-я0-9\\s.\\-`~!@#$%^&*()_=+|?]+$/,\r\n    socketAuthDelay: 5000, // 5 seconds\r\n}","import { IsEmail, Matches, IsMobilePhone, IsOptional, IsNumber } from 'class-validator';\nimport { isEmail, isMobilePhone } from 'class-validator';\nimport { apiConfig } from '../api.config';\nimport { IUserFull } from '../interfaces/user-full.interface';\n\n/** \n * Pass username, email or phone number as user ID.\n * Password is password. \n */\nexport class AuthCredentialsDto implements IUserFull {\n\t@IsOptional()\n\t@Matches(apiConfig.usernameRegex, {\n\t\tmessage: `Username doesn't match the rule: ${apiConfig.usernameRegex}`\n\t})\n\tusername?: string;\n\n\t@IsOptional()\n\t@IsEmail()\n\temail?: string;\n\n\t@IsOptional()\n\t@IsMobilePhone()\n\tphone?: string;\n\n\t@IsNumber({}, { message: 'no username, email or phone found' })\n\tget hasSomeId(): number | undefined {\n\t\tif (!this.username) if (!this.email) if (!this.phone) return undefined;\n\n\t\treturn 1;\n\t}\n\n\t@Matches(apiConfig.passwordRegex, {\n\t\tmessage: `Password doesn't match the rule: ${apiConfig.passwordRegex}`\n\t})\n\tpassword: string;\n\n\t//-----------------\n\t// Magic with ID :)\n\n\tpublic set id(id: string) {\n\t\tthis.username = null;\n\t\tthis.email = null;\n\t\tthis.phone = null;\n\n\t\tif (isEmail(id)) this.email = id;\n\t\telse if (isMobilePhone(id)) this.phone = id;\n\t\telse this.username = id;\n\t}\n\n\tpublic get id() {\n\t\tconst id = this.username || this.email || this.phone;\n\t\treturn id;\n\t}\n}\n","export enum WebSocketsTheme {\r\n    /** \r\n     * Server sends this when socket connection open. \r\n     * Client should respond with valid auth token or\r\n     * server will close client connection in apiConfig.socketAuthDelay\r\n     * seconds\r\n     */\r\n    ClientConnected,\r\n\r\n    /**\r\n     * Client sends this after receiving [ClientConnected] theme.\r\n     * In content there should be a valid auth token.\r\n     */\r\n    AuthenticateWithToken,\r\n\r\n    /**\r\n     * Use when client was disconnected by auth timeout or\r\n     * provided token is invalid.\r\n     */\r\n    Unauthorized,\r\n\r\n\r\n    /** Use it when server didn't understand command. */\r\n    BadDto,\r\n\r\n    /** For DTO filtering */\r\n    EndOfServiceCommands,\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n    /** Server should return DTO as it is */\r\n    SendBackData,\r\n}"],"sourceRoot":"webpack:///"}